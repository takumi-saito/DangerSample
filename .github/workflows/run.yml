name: learn-github-actions # アクション名
on: [push] # トリガー

env:
  GRADLE_KTLINT_TASK: 'ktlint'
  GRADLE_ANDROID_LINT_TASK: 'lintDebug'
  GRADLE_UNIT_TEST_TASK: 'testDevelopDebugUnitTest'
  DANGER_VERSION: '8.3.1'

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2 # ブランチ切り替え。actionsが提供するブランチ切り替えアクション {user名}/{action名}@{version}
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Gradle Cache # Gradleの依存関係をキャッシュ/リストアしてビルド時間を短くする
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: debug
        run: |
          echo "-- start"
          echo "$(pwd)"
          echo "$(ls -l)"
          echo "--"
          echo "$(ls -l ~/)"
          echo "$(ls -l ~)"
          echo "$(ls -l .)"
          echo "$(ls -l ./gradlew)"
          echo "-- end"
      - name: Make Gradle executable
        run: chmod +x ./gradlew
      - name: Build with Gradle
        run: ./gradlew build
#   danger:
#     needs: setup
#     runs-on: ubuntu-latest
#     steps:
#       - name: Setup ruby
#         uses: actions/setup-ruby@v1 # ruby設定用のAction
#         with:
#           ruby-version: '2.6'
#           architecture: 'x64'
#       - name: install danger
#         run: |
#           gem install bundler
#           bundle install
#       - name: run ktlintCheck # ktlintCheckを実行
#         run: ./gradlew ktlintCheck
#       - name: run danger
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         # GITHUB_TOKENがデフォで発行されるのでそれをdangerで利用
#         # https://help.github.com/en/articles/virtual-environments-for-github-actions
#         run: danger
